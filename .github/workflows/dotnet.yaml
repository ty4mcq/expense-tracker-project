name: Auto-Deploy to Elastic Beanstalk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_LOCATION: ExpenseTracker/ExpenseTracker.csproj
  ELASTIC_BEANSTALK_NAME: ty4mcq-expense-tracker-app
  ELASTIC_BEANSTALK_ENV_NAME: ty4mcq-expense-tracker-env

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Restore dependencies
        run: dotnet restore $PROJECT_LOCATION
      - name: Build
        run: dotnet build --no-restore $PROJECT_LOCATION
      - name: Pack
        run: |
          dotnet publish $PROJECT_LOCATION -c Release --output "${{ github.workspace }}/release"
          cd release
          zip -r ../release.zip .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.3.3
        with: 
          name: deploy-files
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          name: deploy-files
      - name: List downloaded files
        run: ls -la
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Deploy
        run: |
          TIMESTAMP=$(date +%s)
          aws s3 cp "deploy-files/release.zip" s3://elasticbeanstalk-eu-west-2-${{ secrets.AWS_ACCOUNT_ID }}/artifact/tyler-expense-tracker/release-${TIMESTAMP}.zip
          aws elasticbeanstalk create-application-version --application-name $ELASTIC_BEANSTALK_NAME --version-label release-${TIMESTAMP} --description "Release ${TIMESTAMP}" --source-bundle S3Bucket="elasticbeanstalk-eu-west-2-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="artifact/tyler-expense-tracker/release-${TIMESTAMP}.zip"
          aws elasticbeanstalk update-environment --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME --version-label release-${TIMESTAMP}
          aws elasticbeanstalk wait environment-updated --application-name $ELASTIC_BEANSTALK_NAME --environment-name $ELASTIC_BEANSTALK_ENV_NAME